$schema: ../sample-schema.json

# Vitest output is too verbose - shows all passing tests before failure

metadata:
  tool: vitest
  toolVersion: "3.2.4"
  platform: darwin
  nodeVersion: "22.0.0"
  contributor: vibe-validate
  contributedDate: "2025-10-23"
  sourceIssue: null
  sourcePR: null
  category: assertion-failure
  difficulty: hard
  description: |
    Vitest shows ALL passing tests (hundreds of lines) before showing failures.
    This wastes LLM context window tokens. Only failures should be shown.
    Also, objects are truncated as "{ …(3) }" making debugging impossible.

    Original dogfooding score: 52%

input:
  raw: |
    RUN  v3.2.4 /Users/jeff/Workspaces/vibe-validate
         Coverage enabled with v8

    ✓ packages/cli/test/integration/doctor.integration.test.ts (9 tests) 14436ms
    ✓ packages/cli/test/bin.test.ts (35 tests) 5594ms
    ✓ packages/cli/test/commands/init-focused-modes.test.ts (12 tests) 884ms
    ✓ packages/cli/test/commands/init-schema-validation.test.ts (11 tests) 454ms
    ✓ packages/cli/test/commands/validate.test.ts (20 tests) 282ms
    ✓ packages/core/test/runner.test.ts (21 tests) 196ms
    ✓ packages/cli/test/commands/generate-workflow.test.ts (39 tests) 51ms
    ✓ packages/cli/test/commands/pre-commit.test.ts (10 tests) 25ms
    ✓ packages/cli/test/utils/setup-checks/workflow-check.test.ts (14 tests) 22ms
    ✓ packages/cli/test/commands/state.test.ts (14 tests) 19ms
    ✓ packages/cli/test/config-templates.test.ts (27 tests) 18ms
    ✓ packages/core/test/markdown-examples-validation.test.ts (23 tests) 12ms
    ✓ packages/config/test/loader.test.ts (8 tests) 12ms
    ✓ packages/cli/test/utils/setup-checks/hooks-check.test.ts (19 tests) 14ms
    ✓ packages/history/test/reader.test.ts (20 tests) 9ms
    ✓ packages/cli/test/config-loader.test.ts (12 tests) 10ms
    ✓ packages/cli/test/services/ci-providers/github-actions.test.ts (16 tests) 9ms
    ✓ packages/cli/test/commands/config.test.ts (9 tests) 9ms
    ✓ packages/cli/test/commands/doctor.test.ts (42 tests) 8ms
    ✓ packages/history/test/recorder.test.ts (6 tests) 7ms
    ✓ packages/cli/test/runner-adapter.test.ts (12 tests) 5ms
    ✓ packages/core/test/process-utils.test.ts (13 tests) 5ms
    ✓ packages/config/test/schema.test.ts (24 tests) 5ms
    ✓ packages/history/test/pruner.test.ts (17 tests) 5ms
    ✓ packages/cli/test/utils/check-validation.test.ts (12 tests) 5ms
    ✓ packages/git/test/tree-hash.test.ts (8 tests) 4ms
    ✓ packages/history/test/integration.test.ts (4 tests) 4ms
    ✓ packages/git/test/post-merge-cleanup.test.ts (18 tests) 4ms
    ✓ packages/extractors/test/sample-harness.test.ts (8 tests) 4ms
    ✓ packages/git/test/branch-sync.test.ts (15 tests) 4ms
    ✓ packages/cli/test/utils/template-discovery.test.ts (9 tests) 4ms
    ✓ packages/extractors/test/vitest-extractor.test.ts (14 tests) 3ms
    ✓ packages/history/test/health-check.test.ts (10 tests) 3ms
    ✓ packages/extractors/test/typescript-extractor.test.ts (12 tests) 3ms
    ✓ packages/extractors/test/eslint-extractor.test.ts (13 tests) 4ms
    ✓ packages/extractors/test/smart-extractor.test.ts (15 tests) 3ms
    ✓ packages/cli/test/context-detector.test.ts (15 tests) 3ms
    ✓ packages/extractors/test/utils.test.ts (22 tests) 3ms
    ✓ packages/cli/test/utils/git-detection.test.ts (11 tests) 3ms
    ✓ packages/cli/test/utils/setup-checks/gitignore-check.test.ts (9 tests) 2ms
    ✓ packages/core/test/result-schema-export.test.ts (2 tests) 2ms
    ✓ packages/config/test/git-helpers.test.ts (20 tests) 2ms
    ✓ packages/history/test/truncate.test.ts (4 tests) 2ms
    ✓ packages/git/test/command-injection-fix.test.ts (3 tests) 2ms
    ❯ packages/core/test/truncated-object-debug.test.ts (1 test | 1 failed) 4ms
      × Truncated Object Debug Test > should fail with truncated object in error 3ms
        → expected { …(3) } to have property "type"

    ⎯⎯⎯⎯⎯⎯⎯ Failed Tests 1 ⎯⎯⎯⎯⎯⎯⎯

    FAIL  packages/core/test/truncated-object-debug.test.ts > Truncated Object Debug Test > should fail with truncated object in error
    AssertionError: expected { …(3) } to have property "type"
     ❯ packages/core/test/truncated-object-debug.test.ts:12:20
         10|
         11|     // This will fail and show truncated object
         12|     expect(actual).toHaveProperty('type');
           |                    ^
         13|   });
         14| });

    Test Files  1 failed | 44 passed (45)
         Tests  1 failed | 657 passed (658)

expected:
  detectionConfidence: 95
  detectedTool: vitest
  failures:
    - tool: vitest
      type: test-failure
      summary: "Truncated Object Debug Test > should fail with truncated object in error"
      message: "AssertionError: expected object with properties [$ref, definitions, $schema] to have property \"type\""
      location:
        file: packages/core/test/truncated-object-debug.test.ts
        line: 12
        column: 20
      context: |
        Object has 3 properties but they're hidden by truncation.
        Need to see actual properties: $ref, definitions, $schema
      stackTrace:
        - file: packages/core/test/truncated-object-debug.test.ts
          line: 12
          column: 20
      relevance: 100

      # What users should see - WITHOUT all the passing tests
      llmSummary: |
        Test 'Truncated Object Debug Test > should fail with truncated object in error' failed
        Location: packages/core/test/truncated-object-debug.test.ts:12:20

        AssertionError: expected object to have property "type"
        The object has 3 properties but cannot determine which ones (truncated as { …(3) })

        Note: 657 other tests passed, only 1 failed

quality:
  lastTested: null
  fields: {}
  score: null
  issues: []
  scoreHistory: []

improvementHints:
  - "Filter OUT all passing test lines (✓) - only show failures (❯ or ×)"
  - "Keep summary line: 'Test Files X failed | Y passed' for context"
  - "Expand truncated objects: { …(3) } should show actual properties"
  - "This reduces output from 299 lines to ~15 lines"
  - "LLMs need concise failure information, not success noise"

relatedSamples:
  - vitest/assertion-error-001.yaml
